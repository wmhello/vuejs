{"remainingRequest":"E:\\study\\vuejs\\router2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\study\\vuejs\\router2\\node_modules\\mescroll.js\\mescroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\study\\vuejs\\router2\\node_modules\\mescroll.js\\mescroll.vue","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\n// 引入mescroll.min.js和mescroll.min.css\nimport MeScroll from 'mescroll.js'\nimport 'mescroll.js/mescroll.min.css'\n\nexport default {\n  name: 'MeScrollVue',\n  data: function () {\n    return {\n      mescroll: null,\n      lastScrollTop: 0, // 路由切换时滚动条的位置\n      lastBounce: null // 路由切换时是否禁止ios回弹\n    }\n  },\n  props: {\n    up: Object,\n    down: Object\n  },\n  mounted: function () {\n    this.mescroll = new MeScroll(this.$refs.mescroll, {\n      up: this.up,\n      down: this.down\n    })\n    this.$emit('init', this.mescroll) // init回调mescroll对象\n  },\n  methods: {\n    beforeRouteEnter () {\n      if (this.mescroll) {\n        // 滚动到之前列表的位置\n        if (this.lastScrollTop) {\n          this.mescroll.setScrollTop(this.lastScrollTop)\n          setTimeout(() => { // 需延时,因为setScrollTop内部会触发onScroll,可能会渐显回到顶部按钮\n            this.mescroll.setTopBtnFadeDuration(0) // 设置回到顶部按钮显示时无渐显动画\n          }, 16)\n        }\n        // 恢复到之前设置的isBounce状态\n        if (this.lastBounce != null) this.mescroll.setBounce(this.lastBounce)\n      }\n    },\n    beforeRouteLeave () {\n      if (this.mescroll) {\n        this.lastScrollTop = this.mescroll.getScrollTop() // 记录当前滚动条的位置\n        this.mescroll.hideTopBtn(0) // 隐藏回到顶部按钮,无渐隐动画\n        this.lastBounce = this.mescroll.optUp.isBounce // 记录当前是否禁止ios回弹\n        this.mescroll.setBounce(true) // 允许bounce\n      }\n    }\n  }\n}\n",{"version":3,"sources":["mescroll.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mescroll.vue","sourceRoot":"node_modules/mescroll.js","sourcesContent":["<template>\n  <div ref=\"mescroll\" class=\"mescroll\">\n    <div>\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n// 引入mescroll.min.js和mescroll.min.css\nimport MeScroll from 'mescroll.js'\nimport 'mescroll.js/mescroll.min.css'\n\nexport default {\n  name: 'MeScrollVue',\n  data: function () {\n    return {\n      mescroll: null,\n      lastScrollTop: 0, // 路由切换时滚动条的位置\n      lastBounce: null // 路由切换时是否禁止ios回弹\n    }\n  },\n  props: {\n    up: Object,\n    down: Object\n  },\n  mounted: function () {\n    this.mescroll = new MeScroll(this.$refs.mescroll, {\n      up: this.up,\n      down: this.down\n    })\n    this.$emit('init', this.mescroll) // init回调mescroll对象\n  },\n  methods: {\n    beforeRouteEnter () {\n      if (this.mescroll) {\n        // 滚动到之前列表的位置\n        if (this.lastScrollTop) {\n          this.mescroll.setScrollTop(this.lastScrollTop)\n          setTimeout(() => { // 需延时,因为setScrollTop内部会触发onScroll,可能会渐显回到顶部按钮\n            this.mescroll.setTopBtnFadeDuration(0) // 设置回到顶部按钮显示时无渐显动画\n          }, 16)\n        }\n        // 恢复到之前设置的isBounce状态\n        if (this.lastBounce != null) this.mescroll.setBounce(this.lastBounce)\n      }\n    },\n    beforeRouteLeave () {\n      if (this.mescroll) {\n        this.lastScrollTop = this.mescroll.getScrollTop() // 记录当前滚动条的位置\n        this.mescroll.hideTopBtn(0) // 隐藏回到顶部按钮,无渐隐动画\n        this.lastBounce = this.mescroll.optUp.isBounce // 记录当前是否禁止ios回弹\n        this.mescroll.setBounce(true) // 允许bounce\n      }\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"]}]}