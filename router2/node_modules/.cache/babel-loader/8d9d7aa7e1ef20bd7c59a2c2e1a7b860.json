{"remainingRequest":"E:\\study\\vuejs\\router2\\node_modules\\babel-loader\\lib\\index.js!E:\\study\\vuejs\\router2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\study\\vuejs\\router2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\study\\vuejs\\router2\\node_modules\\mescroll.js\\mescroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\study\\vuejs\\router2\\node_modules\\mescroll.js\\mescroll.vue","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\study\\vuejs\\router2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n// 引入mescroll.min.js和mescroll.min.css\nimport MeScroll from 'mescroll.js';\nimport 'mescroll.js/mescroll.min.css';\nexport default {\n  name: 'MeScrollVue',\n  data: function data() {\n    return {\n      mescroll: null,\n      lastScrollTop: 0,\n      // 路由切换时滚动条的位置\n      lastBounce: null // 路由切换时是否禁止ios回弹\n\n    };\n  },\n  props: {\n    up: Object,\n    down: Object\n  },\n  mounted: function mounted() {\n    this.mescroll = new MeScroll(this.$refs.mescroll, {\n      up: this.up,\n      down: this.down\n    });\n    this.$emit('init', this.mescroll); // init回调mescroll对象\n  },\n  methods: {\n    beforeRouteEnter: function beforeRouteEnter() {\n      var _this = this;\n\n      if (this.mescroll) {\n        // 滚动到之前列表的位置\n        if (this.lastScrollTop) {\n          this.mescroll.setScrollTop(this.lastScrollTop);\n          setTimeout(function () {\n            // 需延时,因为setScrollTop内部会触发onScroll,可能会渐显回到顶部按钮\n            _this.mescroll.setTopBtnFadeDuration(0); // 设置回到顶部按钮显示时无渐显动画\n\n          }, 16);\n        } // 恢复到之前设置的isBounce状态\n\n\n        if (this.lastBounce != null) this.mescroll.setBounce(this.lastBounce);\n      }\n    },\n    beforeRouteLeave: function beforeRouteLeave() {\n      if (this.mescroll) {\n        this.lastScrollTop = this.mescroll.getScrollTop(); // 记录当前滚动条的位置\n\n        this.mescroll.hideTopBtn(0); // 隐藏回到顶部按钮,无渐隐动画\n\n        this.lastBounce = this.mescroll.optUp.isBounce; // 记录当前是否禁止ios回弹\n\n        this.mescroll.setBounce(true); // 允许bounce\n      }\n    }\n  }\n};",{"version":3,"sources":["mescroll.vue"],"names":[],"mappings":";;;;;;;;AASA;AACA,OAAA,QAAA,MAAA,aAAA;AACA,OAAA,8BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,aAAA,EAAA,CAFA;AAEA;AACA,MAAA,UAAA,EAAA,IAHA,CAGA;;AAHA,KAAA;AAKA,GARA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA;AAFA,GATA;AAaA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,QAAA,GAAA,IAAA,QAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA;AACA,MAAA,EAAA,EAAA,KAAA,EADA;AAEA,MAAA,IAAA,EAAA,KAAA;AAFA,KAAA,CAAA;AAIA,SAAA,KAAA,CAAA,MAAA,EAAA,KAAA,QAAA,EALA,CAKA;AACA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA;AACA,YAAA,KAAA,aAAA,EAAA;AACA,eAAA,QAAA,CAAA,YAAA,CAAA,KAAA,aAAA;AACA,UAAA,UAAA,CAAA,YAAA;AAAA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,CAAA,EADA,CACA;;AACA,WAFA,EAEA,EAFA,CAAA;AAGA,SAPA,CAQA;;;AACA,YAAA,KAAA,UAAA,IAAA,IAAA,EAAA,KAAA,QAAA,CAAA,SAAA,CAAA,KAAA,UAAA;AACA;AACA,KAbA;AAcA,IAAA,gBAdA,8BAcA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,aAAA,aAAA,GAAA,KAAA,QAAA,CAAA,YAAA,EAAA,CADA,CACA;;AACA,aAAA,QAAA,CAAA,UAAA,CAAA,CAAA,EAFA,CAEA;;AACA,aAAA,UAAA,GAAA,KAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAHA,CAGA;;AACA,aAAA,QAAA,CAAA,SAAA,CAAA,IAAA,EAJA,CAIA;AACA;AACA;AArBA;AApBA,CAAA","sourcesContent":["<template>\n  <div ref=\"mescroll\" class=\"mescroll\">\n    <div>\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n// 引入mescroll.min.js和mescroll.min.css\nimport MeScroll from 'mescroll.js'\nimport 'mescroll.js/mescroll.min.css'\n\nexport default {\n  name: 'MeScrollVue',\n  data: function () {\n    return {\n      mescroll: null,\n      lastScrollTop: 0, // 路由切换时滚动条的位置\n      lastBounce: null // 路由切换时是否禁止ios回弹\n    }\n  },\n  props: {\n    up: Object,\n    down: Object\n  },\n  mounted: function () {\n    this.mescroll = new MeScroll(this.$refs.mescroll, {\n      up: this.up,\n      down: this.down\n    })\n    this.$emit('init', this.mescroll) // init回调mescroll对象\n  },\n  methods: {\n    beforeRouteEnter () {\n      if (this.mescroll) {\n        // 滚动到之前列表的位置\n        if (this.lastScrollTop) {\n          this.mescroll.setScrollTop(this.lastScrollTop)\n          setTimeout(() => { // 需延时,因为setScrollTop内部会触发onScroll,可能会渐显回到顶部按钮\n            this.mescroll.setTopBtnFadeDuration(0) // 设置回到顶部按钮显示时无渐显动画\n          }, 16)\n        }\n        // 恢复到之前设置的isBounce状态\n        if (this.lastBounce != null) this.mescroll.setBounce(this.lastBounce)\n      }\n    },\n    beforeRouteLeave () {\n      if (this.mescroll) {\n        this.lastScrollTop = this.mescroll.getScrollTop() // 记录当前滚动条的位置\n        this.mescroll.hideTopBtn(0) // 隐藏回到顶部按钮,无渐隐动画\n        this.lastBounce = this.mescroll.optUp.isBounce // 记录当前是否禁止ios回弹\n        this.mescroll.setBounce(true) // 允许bounce\n      }\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"node_modules/mescroll.js"}]}